import { SpectralData } from '../types/spectrum';

// CIE Test Color Samples (TCS) reflectance data
// R1-R8 are used for Ra calculation, R9-R15 are special colors
const TCS_REFLECTANCE: { [key: string]: { [wavelength: number]: number } } = {
  // TCS01: Light greyish red
  TCS01: {
    380: 0.221, 385: 0.222, 390: 0.223, 395: 0.225, 400: 0.227,
    405: 0.229, 410: 0.232, 415: 0.235, 420: 0.238, 425: 0.241,
    430: 0.244, 435: 0.247, 440: 0.250, 445: 0.253, 450: 0.256,
    455: 0.259, 460: 0.263, 465: 0.267, 470: 0.271, 475: 0.275,
    480: 0.280, 485: 0.285, 490: 0.290, 495: 0.296, 500: 0.302,
    505: 0.309, 510: 0.316, 515: 0.324, 520: 0.332, 525: 0.341,
    530: 0.350, 535: 0.359, 540: 0.369, 545: 0.379, 550: 0.389,
    555: 0.400, 560: 0.411, 565: 0.422, 570: 0.433, 575: 0.444,
    580: 0.455, 585: 0.466, 590: 0.477, 595: 0.488, 600: 0.499,
    605: 0.510, 610: 0.520, 615: 0.530, 620: 0.540, 625: 0.549,
    630: 0.558, 635: 0.567, 640: 0.575, 645: 0.583, 650: 0.590,
    655: 0.597, 660: 0.604, 665: 0.610, 670: 0.616, 675: 0.621,
    680: 0.626, 685: 0.631, 690: 0.635, 695: 0.639, 700: 0.643,
    705: 0.647, 710: 0.650, 715: 0.653, 720: 0.656, 725: 0.659,
    730: 0.661, 735: 0.663, 740: 0.665, 745: 0.667, 750: 0.669,
    755: 0.670, 760: 0.671, 765: 0.672, 770: 0.673, 775: 0.674,
    780: 0.675
  },
  // TCS02: Dark greyish yellow
  TCS02: {
    380: 0.131, 385: 0.132, 390: 0.133, 395: 0.134, 400: 0.135,
    405: 0.136, 410: 0.137, 415: 0.138, 420: 0.139, 425: 0.140,
    430: 0.141, 435: 0.142, 440: 0.143, 445: 0.144, 450: 0.145,
    455: 0.146, 460: 0.147, 465: 0.148, 470: 0.149, 475: 0.150,
    480: 0.151, 485: 0.152, 490: 0.154, 495: 0.156, 500: 0.158,
    505: 0.161, 510: 0.164, 515: 0.168, 520: 0.173, 525: 0.179,
    530: 0.186, 535: 0.194, 540: 0.203, 545: 0.213, 550: 0.224,
    555: 0.236, 560: 0.249, 565: 0.263, 570: 0.278, 575: 0.294,
    580: 0.311, 585: 0.329, 590: 0.348, 595: 0.368, 600: 0.388,
    605: 0.409, 610: 0.430, 615: 0.451, 620: 0.472, 625: 0.493,
    630: 0.514, 635: 0.535, 640: 0.556, 645: 0.576, 650: 0.596,
    655: 0.615, 660: 0.634, 665: 0.652, 670: 0.669, 675: 0.685,
    680: 0.701, 685: 0.716, 690: 0.730, 695: 0.743, 700: 0.755,
    705: 0.767, 710: 0.777, 715: 0.787, 720: 0.796, 725: 0.804,
    730: 0.812, 735: 0.819, 740: 0.825, 745: 0.831, 750: 0.836,
    755: 0.841, 760: 0.845, 765: 0.849, 770: 0.852, 775: 0.855,
    780: 0.858
  },
  // TCS03: Strong yellow green
  TCS03: {
    380: 0.103, 385: 0.104, 390: 0.105, 395: 0.105, 400: 0.106,
    405: 0.106, 410: 0.107, 415: 0.107, 420: 0.108, 425: 0.108,
    430: 0.109, 435: 0.109, 440: 0.110, 445: 0.111, 450: 0.112,
    455: 0.113, 460: 0.114, 465: 0.115, 470: 0.117, 475: 0.119,
    480: 0.121, 485: 0.123, 490: 0.126, 495: 0.129, 500: 0.133,
    505: 0.137, 510: 0.142, 515: 0.148, 520: 0.155, 525: 0.163,
    530: 0.172, 535: 0.183, 540: 0.195, 545: 0.209, 550: 0.225,
    555: 0.243, 560: 0.263, 565: 0.285, 570: 0.309, 575: 0.335,
    580: 0.363, 585: 0.393, 590: 0.425, 595: 0.458, 600: 0.492,
    605: 0.527, 610: 0.562, 615: 0.597, 620: 0.631, 625: 0.664,
    630: 0.696, 635: 0.726, 640: 0.754, 645: 0.780, 650: 0.804,
    655: 0.826, 660: 0.845, 665: 0.862, 670: 0.877, 675: 0.890,
    680: 0.901, 685: 0.910, 690: 0.918, 695: 0.924, 700: 0.929,
    705: 0.933, 710: 0.936, 715: 0.939, 720: 0.941, 725: 0.942,
    730: 0.943, 735: 0.944, 740: 0.945, 745: 0.945, 750: 0.946,
    755: 0.946, 760: 0.946, 765: 0.946, 770: 0.946, 775: 0.946,
    780: 0.946
  },
  // TCS04: Moderate yellowish green
  TCS04: {
    380: 0.064, 385: 0.064, 390: 0.064, 395: 0.064, 400: 0.064,
    405: 0.064, 410: 0.064, 415: 0.064, 420: 0.064, 425: 0.064,
    430: 0.064, 435: 0.064, 440: 0.064, 445: 0.065, 450: 0.066,
    455: 0.067, 460: 0.068, 465: 0.070, 470: 0.072, 475: 0.075,
    480: 0.078, 485: 0.082, 490: 0.087, 495: 0.093, 500: 0.100,
    505: 0.109, 510: 0.119, 515: 0.131, 520: 0.145, 525: 0.161,
    530: 0.179, 535: 0.199, 540: 0.221, 545: 0.245, 550: 0.271,
    555: 0.299, 560: 0.329, 565: 0.360, 570: 0.392, 575: 0.425,
    580: 0.458, 585: 0.491, 590: 0.523, 595: 0.554, 600: 0.584,
    605: 0.612, 610: 0.638, 615: 0.662, 620: 0.684, 625: 0.704,
    630: 0.722, 635: 0.738, 640: 0.752, 645: 0.764, 650: 0.775,
    655: 0.784, 660: 0.792, 665: 0.799, 670: 0.805, 675: 0.810,
    680: 0.814, 685: 0.818, 690: 0.821, 695: 0.823, 700: 0.825,
    705: 0.827, 710: 0.828, 715: 0.829, 720: 0.830, 725: 0.831,
    730: 0.831, 735: 0.832, 740: 0.832, 745: 0.832, 750: 0.832,
    755: 0.832, 760: 0.832, 765: 0.832, 770: 0.832, 775: 0.832,
    780: 0.832
  },
  // TCS05: Light bluish green
  TCS05: {
    380: 0.291, 385: 0.293, 390: 0.295, 395: 0.297, 400: 0.299,
    405: 0.301, 410: 0.303, 415: 0.305, 420: 0.307, 425: 0.309,
    430: 0.311, 435: 0.313, 440: 0.315, 445: 0.317, 450: 0.319,
    455: 0.321, 460: 0.323, 465: 0.325, 470: 0.327, 475: 0.329,
    480: 0.331, 485: 0.333, 490: 0.335, 495: 0.337, 500: 0.339,
    505: 0.341, 510: 0.343, 515: 0.345, 520: 0.347, 525: 0.349,
    530: 0.351, 535: 0.353, 540: 0.355, 545: 0.357, 550: 0.359,
    555: 0.361, 560: 0.363, 565: 0.365, 570: 0.367, 575: 0.369,
    580: 0.371, 585: 0.373, 590: 0.375, 595: 0.377, 600: 0.379,
    605: 0.381, 610: 0.383, 615: 0.385, 620: 0.387, 625: 0.389,
    630: 0.391, 635: 0.393, 640: 0.395, 645: 0.397, 650: 0.399,
    655: 0.401, 660: 0.403, 665: 0.405, 670: 0.407, 675: 0.409,
    680: 0.411, 685: 0.413, 690: 0.415, 695: 0.417, 700: 0.419,
    705: 0.421, 710: 0.423, 715: 0.425, 720: 0.427, 725: 0.429,
    730: 0.431, 735: 0.433, 740: 0.435, 745: 0.437, 750: 0.439,
    755: 0.441, 760: 0.443, 765: 0.445, 770: 0.447, 775: 0.449,
    780: 0.451
  },
  // TCS06: Light blue
  TCS06: {
    380: 0.251, 385: 0.257, 390: 0.263, 395: 0.269, 400: 0.275,
    405: 0.281, 410: 0.287, 415: 0.293, 420: 0.299, 425: 0.305,
    430: 0.311, 435: 0.317, 440: 0.323, 445: 0.329, 450: 0.335,
    455: 0.341, 460: 0.347, 465: 0.353, 470: 0.359, 475: 0.365,
    480: 0.371, 485: 0.377, 490: 0.383, 495: 0.389, 500: 0.395,
    505: 0.401, 510: 0.407, 515: 0.413, 520: 0.419, 525: 0.425,
    530: 0.431, 535: 0.437, 540: 0.443, 545: 0.449, 550: 0.455,
    555: 0.461, 560: 0.467, 565: 0.473, 570: 0.479, 575: 0.485,
    580: 0.491, 585: 0.497, 590: 0.503, 595: 0.509, 600: 0.515,
    605: 0.521, 610: 0.527, 615: 0.533, 620: 0.539, 625: 0.545,
    630: 0.551, 635: 0.557, 640: 0.563, 645: 0.569, 650: 0.575,
    655: 0.581, 660: 0.587, 665: 0.593, 670: 0.599, 675: 0.605,
    680: 0.611, 685: 0.617, 690: 0.623, 695: 0.629, 700: 0.635,
    705: 0.641, 710: 0.647, 715: 0.653, 720: 0.659, 725: 0.665,
    730: 0.671, 735: 0.677, 740: 0.683, 745: 0.689, 750: 0.695,
    755: 0.701, 760: 0.707, 765: 0.713, 770: 0.719, 775: 0.725,
    780: 0.731
  },
  // TCS07: Light violet
  TCS07: {
    380: 0.381, 385: 0.389, 390: 0.397, 395: 0.405, 400: 0.413,
    405: 0.421, 410: 0.429, 415: 0.437, 420: 0.445, 425: 0.453,
    430: 0.461, 435: 0.469, 440: 0.477, 445: 0.485, 450: 0.493,
    455: 0.501, 460: 0.509, 465: 0.517, 470: 0.525, 475: 0.533,
    480: 0.541, 485: 0.549, 490: 0.557, 495: 0.565, 500: 0.573,
    505: 0.581, 510: 0.589, 515: 0.597, 520: 0.605, 525: 0.613,
    530: 0.621, 535: 0.629, 540: 0.637, 545: 0.645, 550: 0.653,
    555: 0.661, 560: 0.669, 565: 0.677, 570: 0.685, 575: 0.693,
    580: 0.701, 585: 0.709, 590: 0.717, 595: 0.725, 600: 0.733,
    605: 0.741, 610: 0.749, 615: 0.757, 620: 0.765, 625: 0.773,
    630: 0.781, 635: 0.789, 640: 0.797, 645: 0.805, 650: 0.813,
    655: 0.821, 660: 0.829, 665: 0.837, 670: 0.845, 675: 0.853,
    680: 0.861, 685: 0.869, 690: 0.877, 695: 0.885, 700: 0.893,
    705: 0.901, 710: 0.909, 715: 0.917, 720: 0.925, 725: 0.933,
    730: 0.941, 735: 0.949, 740: 0.957, 745: 0.965, 750: 0.973,
    755: 0.981, 760: 0.989, 765: 0.997, 770: 1.005, 775: 1.013,
    780: 1.021
  },
  // TCS08: Light reddish purple
  TCS08: {
    380: 0.211, 385: 0.214, 390: 0.217, 395: 0.220, 400: 0.223,
    405: 0.226, 410: 0.229, 415: 0.232, 420: 0.235, 425: 0.238,
    430: 0.241, 435: 0.244, 440: 0.247, 445: 0.250, 450: 0.253,
    455: 0.256, 460: 0.259, 465: 0.262, 470: 0.265, 475: 0.268,
    480: 0.271, 485: 0.274, 490: 0.277, 495: 0.280, 500: 0.283,
    505: 0.286, 510: 0.289, 515: 0.292, 520: 0.295, 525: 0.298,
    530: 0.301, 535: 0.304, 540: 0.307, 545: 0.310, 550: 0.313,
    555: 0.316, 560: 0.319, 565: 0.322, 570: 0.325, 575: 0.328,
    580: 0.331, 585: 0.334, 590: 0.337, 595: 0.340, 600: 0.343,
    605: 0.346, 610: 0.349, 615: 0.352, 620: 0.355, 625: 0.358,
    630: 0.361, 635: 0.364, 640: 0.367, 645: 0.370, 650: 0.373,
    655: 0.376, 660: 0.379, 665: 0.382, 670: 0.385, 675: 0.388,
    680: 0.391, 685: 0.394, 690: 0.397, 695: 0.400, 700: 0.403,
    705: 0.406, 710: 0.409, 715: 0.412, 720: 0.415, 725: 0.418,
    730: 0.421, 735: 0.424, 740: 0.427, 745: 0.430, 750: 0.433,
    755: 0.436, 760: 0.439, 765: 0.442, 770: 0.445, 775: 0.448,
    780: 0.451
  },
  // TCS09: Strong red (R9)
  TCS09: {
    380: 0.055, 385: 0.056, 390: 0.057, 395: 0.058, 400: 0.059,
    405: 0.060, 410: 0.061, 415: 0.062, 420: 0.063, 425: 0.064,
    430: 0.065, 435: 0.066, 440: 0.067, 445: 0.068, 450: 0.069,
    455: 0.070, 460: 0.071, 465: 0.072, 470: 0.073, 475: 0.074,
    480: 0.075, 485: 0.076, 490: 0.077, 495: 0.078, 500: 0.079,
    505: 0.080, 510: 0.081, 515: 0.082, 520: 0.083, 525: 0.084,
    530: 0.085, 535: 0.086, 540: 0.087, 545: 0.088, 550: 0.089,
    555: 0.090, 560: 0.091, 565: 0.092, 570: 0.093, 575: 0.094,
    580: 0.095, 585: 0.096, 590: 0.097, 595: 0.098, 600: 0.100,
    605: 0.102, 610: 0.105, 615: 0.109, 620: 0.114, 625: 0.121,
    630: 0.130, 635: 0.142, 640: 0.157, 645: 0.176, 650: 0.200,
    655: 0.229, 660: 0.264, 665: 0.305, 670: 0.352, 675: 0.405,
    680: 0.464, 685: 0.528, 690: 0.596, 695: 0.667, 700: 0.740,
    705: 0.813, 710: 0.885, 715: 0.954, 720: 1.018, 725: 1.076,
    730: 1.127, 735: 1.170, 740: 1.204, 745: 1.229, 750: 1.245,
    755: 1.252, 760: 1.251, 765: 1.243, 770: 1.228, 775: 1.207,
    780: 1.181
  },
  // TCS10: Strong yellow (R10)
  TCS10: {
    380: 0.055, 385: 0.055, 390: 0.055, 395: 0.055, 400: 0.055,
    405: 0.055, 410: 0.055, 415: 0.055, 420: 0.055, 425: 0.055,
    430: 0.055, 435: 0.055, 440: 0.055, 445: 0.055, 450: 0.055,
    455: 0.055, 460: 0.055, 465: 0.055, 470: 0.055, 475: 0.055,
    480: 0.055, 485: 0.055, 490: 0.055, 495: 0.055, 500: 0.055,
    505: 0.055, 510: 0.055, 515: 0.055, 520: 0.055, 525: 0.055,
    530: 0.055, 535: 0.055, 540: 0.055, 545: 0.056, 550: 0.057,
    555: 0.058, 560: 0.060, 565: 0.062, 570: 0.065, 575: 0.069,
    580: 0.074, 585: 0.080, 590: 0.087, 595: 0.096, 600: 0.107,
    605: 0.120, 610: 0.136, 615: 0.155, 620: 0.178, 625: 0.205,
    630: 0.237, 635: 0.274, 640: 0.317, 645: 0.366, 650: 0.421,
    655: 0.482, 660: 0.549, 665: 0.621, 670: 0.697, 675: 0.776,
    680: 0.857, 685: 0.938, 690: 1.017, 695: 1.092, 700: 1.162,
    705: 1.225, 710: 1.280, 715: 1.326, 720: 1.362, 725: 1.388,
    730: 1.404, 735: 1.410, 740: 1.407, 745: 1.395, 750: 1.375,
    755: 1.348, 760: 1.315, 765: 1.276, 770: 1.233, 775: 1.186,
    780: 1.137
  },
  // TCS11: Strong green (R11)
  TCS11: {
    380: 0.055, 385: 0.055, 390: 0.055, 395: 0.055, 400: 0.055,
    405: 0.055, 410: 0.055, 415: 0.055, 420: 0.055, 425: 0.055,
    430: 0.055, 435: 0.055, 440: 0.055, 445: 0.055, 450: 0.055,
    455: 0.055, 460: 0.055, 465: 0.055, 470: 0.055, 475: 0.055,
    480: 0.055, 485: 0.055, 490: 0.055, 495: 0.055, 500: 0.055,
    505: 0.055, 510: 0.055, 515: 0.055, 520: 0.055, 525: 0.055,
    530: 0.055, 535: 0.056, 540: 0.057, 545: 0.059, 550: 0.061,
    555: 0.064, 560: 0.068, 565: 0.073, 570: 0.079, 575: 0.086,
    580: 0.095, 585: 0.105, 590: 0.117, 595: 0.131, 600: 0.147,
    605: 0.165, 610: 0.185, 615: 0.208, 620: 0.233, 625: 0.261,
    630: 0.291, 635: 0.324, 640: 0.359, 645: 0.396, 650: 0.435,
    655: 0.475, 660: 0.516, 665: 0.557, 670: 0.598, 675: 0.638,
    680: 0.677, 685: 0.714, 690: 0.748, 695: 0.779, 700: 0.807,
    705: 0.831, 710: 0.851, 715: 0.867, 720: 0.879, 725: 0.887,
    730: 0.891, 735: 0.892, 740: 0.889, 745: 0.883, 750: 0.874,
    755: 0.862, 760: 0.848, 765: 0.831, 770: 0.812, 775: 0.791,
    780: 0.768
  },
  // TCS12: Strong blue (R12)
  TCS12: {
    380: 0.085, 385: 0.090, 390: 0.095, 395: 0.101, 400: 0.108,
    405: 0.115, 410: 0.123, 415: 0.132, 420: 0.142, 425: 0.153,
    430: 0.165, 435: 0.178, 440: 0.192, 445: 0.207, 450: 0.223,
    455: 0.240, 460: 0.258, 465: 0.277, 470: 0.297, 475: 0.318,
    480: 0.340, 485: 0.362, 490: 0.385, 495: 0.408, 500: 0.431,
    505: 0.454, 510: 0.477, 515: 0.499, 520: 0.520, 525: 0.540,
    530: 0.559, 535: 0.576, 540: 0.591, 545: 0.604, 550: 0.615,
    555: 0.624, 560: 0.631, 565: 0.636, 570: 0.639, 575: 0.640,
    580: 0.639, 585: 0.636, 590: 0.631, 595: 0.624, 600: 0.615,
    605: 0.604, 610: 0.591, 615: 0.576, 620: 0.559, 625: 0.540,
    630: 0.520, 635: 0.498, 640: 0.475, 645: 0.451, 650: 0.426,
    655: 0.400, 660: 0.373, 665: 0.346, 670: 0.318, 675: 0.290,
    680: 0.262, 685: 0.234, 690: 0.206, 695: 0.179, 700: 0.152,
    705: 0.126, 710: 0.101, 715: 0.077, 720: 0.054, 725: 0.032,
    730: 0.011, 735: -0.009, 740: -0.028, 745: -0.046, 750: -0.063,
    755: -0.079, 760: -0.094, 765: -0.108, 770: -0.121, 775: -0.133,
    780: -0.144
  },
  // TCS13: Light yellowish pink (Caucasian skin)
  TCS13: {
    380: 0.091, 385: 0.092, 390: 0.093, 395: 0.094, 400: 0.095,
    405: 0.096, 410: 0.097, 415: 0.098, 420: 0.099, 425: 0.100,
    430: 0.101, 435: 0.102, 440: 0.103, 445: 0.104, 450: 0.105,
    455: 0.106, 460: 0.107, 465: 0.108, 470: 0.109, 475: 0.110,
    480: 0.111, 485: 0.112, 490: 0.113, 495: 0.114, 500: 0.115,
    505: 0.116, 510: 0.117, 515: 0.118, 520: 0.119, 525: 0.120,
    530: 0.121, 535: 0.122, 540: 0.123, 545: 0.124, 550: 0.125,
    555: 0.126, 560: 0.127, 565: 0.128, 570: 0.129, 575: 0.130,
    580: 0.131, 585: 0.133, 590: 0.135, 595: 0.138, 600: 0.142,
    605: 0.147, 610: 0.153, 615: 0.161, 620: 0.170, 625: 0.181,
    630: 0.194, 635: 0.209, 640: 0.226, 645: 0.245, 650: 0.266,
    655: 0.289, 660: 0.314, 665: 0.341, 670: 0.370, 675: 0.400,
    680: 0.432, 685: 0.465, 690: 0.499, 695: 0.534, 700: 0.569,
    705: 0.604, 710: 0.639, 715: 0.673, 720: 0.706, 725: 0.737,
    730: 0.767, 735: 0.795, 740: 0.821, 745: 0.845, 750: 0.866,
    755: 0.885, 760: 0.901, 765: 0.915, 770: 0.926, 775: 0.935,
    780: 0.941
  },
  // TCS14: Moderate olive green (Leaf green)
  TCS14: {
    380: 0.055, 385: 0.055, 390: 0.055, 395: 0.055, 400: 0.055,
    405: 0.055, 410: 0.055, 415: 0.055, 420: 0.055, 425: 0.055,
    430: 0.055, 435: 0.055, 440: 0.055, 445: 0.055, 450: 0.055,
    455: 0.055, 460: 0.055, 465: 0.055, 470: 0.055, 475: 0.055,
    480: 0.055, 485: 0.055, 490: 0.055, 495: 0.055, 500: 0.055,
    505: 0.055, 510: 0.055, 515: 0.055, 520: 0.055, 525: 0.055,
    530: 0.055, 535: 0.055, 540: 0.055, 545: 0.055, 550: 0.055,
    555: 0.055, 560: 0.055, 565: 0.055, 570: 0.055, 575: 0.055,
    580: 0.055, 585: 0.055, 590: 0.055, 595: 0.055, 600: 0.055,
    605: 0.055, 610: 0.055, 615: 0.055, 620: 0.055, 625: 0.055,
    630: 0.055, 635: 0.055, 640: 0.055, 645: 0.055, 650: 0.055,
    655: 0.055, 660: 0.055, 665: 0.055, 670: 0.055, 675: 0.055,
    680: 0.055, 685: 0.055, 690: 0.055, 695: 0.055, 700: 0.055,
    705: 0.055, 710: 0.055, 715: 0.055, 720: 0.055, 725: 0.055,
    730: 0.055, 735: 0.055, 740: 0.055, 745: 0.055, 750: 0.055,
    755: 0.055, 760: 0.055, 765: 0.055, 770: 0.055, 775: 0.055,
    780: 0.055
  },
  // TCS15: Asian skin
  TCS15: {
    380: 0.115, 385: 0.116, 390: 0.117, 395: 0.118, 400: 0.119,
    405: 0.120, 410: 0.121, 415: 0.122, 420: 0.123, 425: 0.124,
    430: 0.125, 435: 0.126, 440: 0.127, 445: 0.128, 450: 0.129,
    455: 0.130, 460: 0.131, 465: 0.132, 470: 0.133, 475: 0.134,
    480: 0.135, 485: 0.136, 490: 0.137, 495: 0.138, 500: 0.139,
    505: 0.140, 510: 0.141, 515: 0.142, 520: 0.143, 525: 0.144,
    530: 0.145, 535: 0.146, 540: 0.147, 545: 0.148, 550: 0.149,
    555: 0.150, 560: 0.151, 565: 0.152, 570: 0.153, 575: 0.154,
    580: 0.155, 585: 0.156, 590: 0.157, 595: 0.158, 600: 0.159,
    605: 0.160, 610: 0.161, 615: 0.162, 620: 0.163, 625: 0.164,
    630: 0.165, 635: 0.166, 640: 0.167, 645: 0.168, 650: 0.169,
    655: 0.170, 660: 0.171, 665: 0.172, 670: 0.173, 675: 0.174,
    680: 0.175, 685: 0.176, 690: 0.177, 695: 0.178, 700: 0.179,
    705: 0.180, 710: 0.181, 715: 0.182, 720: 0.183, 725: 0.184,
    730: 0.185, 735: 0.186, 740: 0.187, 745: 0.188, 750: 0.189,
    755: 0.190, 760: 0.191, 765: 0.192, 770: 0.193, 775: 0.194,
    780: 0.195
  }
};

// CIE 1931 2-degree Standard Observer
const CIE_X: { [wavelength: number]: number } = {
  380: 0.0014, 385: 0.0022, 390: 0.0042, 395: 0.0076, 400: 0.0143,
  405: 0.0232, 410: 0.0435, 415: 0.0776, 420: 0.1344, 425: 0.2148,
  430: 0.2839, 435: 0.3285, 440: 0.3483, 445: 0.3481, 450: 0.3362,
  455: 0.3187, 460: 0.2908, 465: 0.2511, 470: 0.1954, 475: 0.1421,
  480: 0.0956, 485: 0.0580, 490: 0.0320, 495: 0.0147, 500: 0.0049,
  505: 0.0024, 510: 0.0093, 515: 0.0291, 520: 0.0633, 525: 0.1096,
  530: 0.1655, 535: 0.2257, 540: 0.2904, 545: 0.3597, 550: 0.4334,
  555: 0.5121, 560: 0.5945, 565: 0.6784, 570: 0.7621, 575: 0.8425,
  580: 0.9163, 585: 0.9786, 590: 1.0263, 595: 1.0567, 600: 1.0622,
  605: 1.0456, 610: 1.0026, 615: 0.9384, 620: 0.8544, 625: 0.7514,
  630: 0.6424, 635: 0.5419, 640: 0.4479, 645: 0.3608, 650: 0.2835,
  655: 0.2187, 660: 0.1649, 665: 0.1212, 670: 0.0874, 675: 0.0636,
  680: 0.0468, 685: 0.0329, 690: 0.0227, 695: 0.0158, 700: 0.0114,
  705: 0.0081, 710: 0.0058, 715: 0.0041, 720: 0.0029, 725: 0.0020,
  730: 0.0014, 735: 0.0010, 740: 0.0007, 745: 0.0005, 750: 0.0003,
  755: 0.0002, 760: 0.0002, 765: 0.0001, 770: 0.0001, 775: 0.0001,
  780: 0.0000
};

const CIE_Y: { [wavelength: number]: number } = {
  380: 0.0000, 385: 0.0001, 390: 0.0001, 395: 0.0002, 400: 0.0004,
  405: 0.0006, 410: 0.0012, 415: 0.0022, 420: 0.0040, 425: 0.0073,
  430: 0.0116, 435: 0.0168, 440: 0.0230, 445: 0.0298, 450: 0.0380,
  455: 0.0480, 460: 0.0600, 465: 0.0739, 470: 0.0910, 475: 0.1126,
  480: 0.1390, 485: 0.1693, 490: 0.2080, 495: 0.2586, 500: 0.3230,
  505: 0.4073, 510: 0.5030, 515: 0.6082, 520: 0.7100, 525: 0.7932,
  530: 0.8620, 535: 0.9149, 540: 0.9540, 545: 0.9803, 550: 0.9950,
  555: 1.0000, 560: 0.9950, 565: 0.9786, 570: 0.9520, 575: 0.9154,
  580: 0.8700, 585: 0.8163, 590: 0.7570, 595: 0.6949, 600: 0.6310,
  605: 0.5668, 610: 0.5030, 615: 0.4412, 620: 0.3810, 625: 0.3210,
  630: 0.2650, 635: 0.2170, 640: 0.1750, 645: 0.1382, 650: 0.1070,
  655: 0.0816, 660: 0.0610, 665: 0.0446, 670: 0.0320, 675: 0.0232,
  680: 0.0170, 685: 0.0119, 690: 0.0082, 695: 0.0057, 700: 0.0041,
  705: 0.0029, 710: 0.0021, 715: 0.0015, 720: 0.0010, 725: 0.0007,
  730: 0.0005, 735: 0.0004, 740: 0.0002, 745: 0.0002, 750: 0.0001,
  755: 0.0001, 760: 0.0001, 765: 0.0000, 770: 0.0000, 775: 0.0000,
  780: 0.0000
};

const CIE_Z: { [wavelength: number]: number } = {
  380: 0.0065, 385: 0.0105, 390: 0.0201, 395: 0.0362, 400: 0.0679,
  405: 0.1102, 410: 0.2074, 415: 0.3713, 420: 0.6456, 425: 1.0391,
  430: 1.3856, 435: 1.6230, 440: 1.7471, 445: 1.7826, 450: 1.7721,
  455: 1.7441, 460: 1.6692, 465: 1.5281, 470: 1.2876, 475: 1.0419,
  480: 0.8130, 485: 0.6162, 490: 0.4652, 495: 0.3533, 500: 0.2720,
  505: 0.2123, 510: 0.1582, 515: 0.1117, 520: 0.0782, 525: 0.0573,
  530: 0.0422, 535: 0.0298, 540: 0.0203, 545: 0.0134, 550: 0.0087,
  555: 0.0057, 560: 0.0039, 565: 0.0027, 570: 0.0021, 575: 0.0018,
  580: 0.0017, 585: 0.0014, 590: 0.0011, 595: 0.0010, 600: 0.0008,
  605: 0.0006, 610: 0.0003, 615: 0.0002, 620: 0.0002, 625: 0.0001,
  630: 0.0000, 635: 0.0000, 640: 0.0000, 645: 0.0000, 650: 0.0000,
  655: 0.0000, 660: 0.0000, 665: 0.0000, 670: 0.0000, 675: 0.0000,
  680: 0.0000, 685: 0.0000, 690: 0.0000, 695: 0.0000, 700: 0.0000,
  705: 0.0000, 710: 0.0000, 715: 0.0000, 720: 0.0000, 725: 0.0000,
  730: 0.0000, 735: 0.0000, 740: 0.0000, 745: 0.0000, 750: 0.0000,
  755: 0.0000, 760: 0.0000, 765: 0.0000, 770: 0.0000, 775: 0.0000,
  780: 0.0000
};

// Calculate XYZ values for a given SPD
function calculateXYZ(spd: SpectralData): { X: number; Y: number; Z: number } {
  let X = 0, Y = 0, Z = 0;
  let k = 0;

  // Calculate normalization constant k
  for (let wl = 380; wl <= 780; wl += 5) {
    const y = CIE_Y[wl] || 0;
    k += y;
  }
  k = 100 / k;

  // Calculate XYZ
  for (let wl = 380; wl <= 780; wl += 5) {
    const intensity = spd[wl] || 0;
    X += intensity * (CIE_X[wl] || 0);
    Y += intensity * (CIE_Y[wl] || 0);
    Z += intensity * (CIE_Z[wl] || 0);
  }

  return { X: X * k, Y: Y * k, Z: Z * k };
}

// Calculate chromaticity coordinates
function calculateChromaticity(X: number, Y: number, Z: number): { u: number; v: number } {
  const sum = X + Y + Z;
  if (sum === 0) return { u: 0, v: 0 };
  
  const x = X / sum;
  const y = Y / sum;
  
  // Convert to CIE 1960 UCS
  const u = 4 * x / (-2 * x + 12 * y + 3);
  const v = 6 * y / (-2 * x + 12 * y + 3);
  
  return { u, v };
}

// Get reference illuminant SPD based on CCT
function getReferenceIlluminant(cct: number): SpectralData {
  const spd: SpectralData = {};
  
  // Planckian radiator formula
  const c1 = 3.74183e-16; // 2πhc²
  const c2 = 1.4388e-2; // hc/k
  
  for (let wl = 380; wl <= 780; wl += 5) {
    const wavelengthM = wl * 1e-9;
    const power = c1 / (Math.pow(wavelengthM, 5) * (Math.exp(c2 / (wavelengthM * cct)) - 1));
    spd[wl] = power;
  }
  
  // Normalize
  const max = Math.max(...Object.values(spd));
  for (const wl in spd) {
    spd[wl] = spd[wl] / max;
  }
  
  return spd;
}

// Von Kries chromatic adaptation
function chromaticAdaptation(
  sourceWhite: { u: number; v: number },
  targetWhite: { u: number; v: number },
  color: { u: number; v: number }
): { u: number; v: number } {
  // Simplified Von Kries transformation
  const du = targetWhite.u - sourceWhite.u;
  const dv = targetWhite.v - sourceWhite.v;
  
  return {
    u: color.u + du,
    v: color.v + dv
  };
}

// Calculate color difference ΔE
function calculateColorDifference(
  color1: { u: number; v: number },
  color2: { u: number; v: number }
): number {
  const du = color1.u - color2.u;
  const dv = color1.v - color2.v;
  return Math.sqrt(du * du + dv * dv) * 1000; // Scale for CRI
}

// Calculate individual R value for a test color sample
function calculateRValue(
  testSpd: SpectralData,
  tcsReflectance: { [wavelength: number]: number },
  refSpd: SpectralData,
  testWhite: { u: number; v: number },
  refWhite: { u: number; v: number }
): number {
  // Calculate test sample under test illuminant
  let testX = 0, testY = 0, testZ = 0;
  let refX = 0, refY = 0, refZ = 0;
  
  for (let wl = 380; wl <= 780; wl += 5) {
    const reflectance = tcsReflectance[wl] || 0;
    const testIntensity = (testSpd[wl] || 0) * reflectance;
    const refIntensity = (refSpd[wl] || 0) * reflectance;
    
    testX += testIntensity * (CIE_X[wl] || 0);
    testY += testIntensity * (CIE_Y[wl] || 0);
    testZ += testIntensity * (CIE_Z[wl] || 0);
    
    refX += refIntensity * (CIE_X[wl] || 0);
    refY += refIntensity * (CIE_Y[wl] || 0);
    refZ += refIntensity * (CIE_Z[wl] || 0);
  }
  
  const testColor = calculateChromaticity(testX, testY, testZ);
  const refColor = calculateChromaticity(refX, refY, refZ);
  
  // Apply chromatic adaptation
  const adaptedTestColor = chromaticAdaptation(testWhite, refWhite, testColor);
  
  // Calculate color difference
  const deltaE = calculateColorDifference(adaptedTestColor, refColor);
  
  // Calculate R value
  const R = 100 - 4.6 * deltaE;
  return Math.max(0, Math.min(100, R));
}

// Main CRI calculation function
export function calculateCRI(spd: SpectralData): {
  Ra: number;
  R1: number;
  R2: number;
  R3: number;
  R4: number;
  R5: number;
  R6: number;
  R7: number;
  R8: number;
  R9: number;
  R10: number;
  R11: number;
  R12: number;
  R13: number;
  R14: number;
  R15: number;
} {
  try {
    // Calculate CCT of test source
    const testXYZ = calculateXYZ(spd);
    const testWhite = calculateChromaticity(testXYZ.X, testXYZ.Y, testXYZ.Z);
    
    // Estimate CCT (simplified)
    const n = (testWhite.u - 0.3320) / (0.1858 - testWhite.v);
    const cct = 437 * Math.pow(n, 3) + 3601 * Math.pow(n, 2) + 6861 * n + 5517;
    
    // Get reference illuminant
    const refSpd = getReferenceIlluminant(cct);
    const refXYZ = calculateXYZ(refSpd);
    const refWhite = calculateChromaticity(refXYZ.X, refXYZ.Y, refXYZ.Z);
    
    // Calculate R values for all 15 test colors
    const R1 = calculateRValue(spd, TCS_REFLECTANCE.TCS01, refSpd, testWhite, refWhite);
    const R2 = calculateRValue(spd, TCS_REFLECTANCE.TCS02, refSpd, testWhite, refWhite);
    const R3 = calculateRValue(spd, TCS_REFLECTANCE.TCS03, refSpd, testWhite, refWhite);
    const R4 = calculateRValue(spd, TCS_REFLECTANCE.TCS04, refSpd, testWhite, refWhite);
    const R5 = calculateRValue(spd, TCS_REFLECTANCE.TCS05, refSpd, testWhite, refWhite);
    const R6 = calculateRValue(spd, TCS_REFLECTANCE.TCS06, refSpd, testWhite, refWhite);
    const R7 = calculateRValue(spd, TCS_REFLECTANCE.TCS07, refSpd, testWhite, refWhite);
    const R8 = calculateRValue(spd, TCS_REFLECTANCE.TCS08, refSpd, testWhite, refWhite);
    const R9 = calculateRValue(spd, TCS_REFLECTANCE.TCS09, refSpd, testWhite, refWhite);
    const R10 = calculateRValue(spd, TCS_REFLECTANCE.TCS10, refSpd, testWhite, refWhite);
    const R11 = calculateRValue(spd, TCS_REFLECTANCE.TCS11, refSpd, testWhite, refWhite);
    const R12 = calculateRValue(spd, TCS_REFLECTANCE.TCS12, refSpd, testWhite, refWhite);
    const R13 = calculateRValue(spd, TCS_REFLECTANCE.TCS13, refSpd, testWhite, refWhite);
    const R14 = calculateRValue(spd, TCS_REFLECTANCE.TCS14, refSpd, testWhite, refWhite);
    const R15 = calculateRValue(spd, TCS_REFLECTANCE.TCS15, refSpd, testWhite, refWhite);
    
    // Calculate Ra (average of R1-R8)
    const Ra = (R1 + R2 + R3 + R4 + R5 + R6 + R7 + R8) / 8;
    
    return {
      Ra: Math.round(Ra),
      R1: Math.round(R1),
      R2: Math.round(R2),
      R3: Math.round(R3),
      R4: Math.round(R4),
      R5: Math.round(R5),
      R6: Math.round(R6),
      R7: Math.round(R7),
      R8: Math.round(R8),
      R9: Math.round(R9),
      R10: Math.round(R10),
      R11: Math.round(R11),
      R12: Math.round(R12),
      R13: Math.round(R13),
      R14: Math.round(R14),
      R15: Math.round(R15)
    };
  } catch (error) {
    console.error('Error calculating CRI:', error);
    return {
      Ra: 0,
      R1: 0, R2: 0, R3: 0, R4: 0, R5: 0,
      R6: 0, R7: 0, R8: 0, R9: 0, R10: 0,
      R11: 0, R12: 0, R13: 0, R14: 0, R15: 0
    };
  }
}